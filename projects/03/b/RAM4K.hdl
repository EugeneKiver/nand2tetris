// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=ma, b=mb, c=mc, d=md, e=me, f=mf, g=mg, h=mh);
    RAM512(in=in, load=ma, address=address[3..11], out=ra);
	RAM512(in=in, load=mb, address=address[3..11], out=rb);
	RAM512(in=in, load=mc, address=address[3..11], out=rc);
	RAM512(in=in, load=md, address=address[3..11], out=rd);
	RAM512(in=in, load=me, address=address[3..11], out=re);
	RAM512(in=in, load=mf, address=address[3..11], out=rf);
	RAM512(in=in, load=mg, address=address[3..11], out=rg);
	RAM512(in=in, load=mh, address=address[3..11], out=rh);
	Mux8Way16(a=ra, b=rb, c=rc, d=rd, e=re, f=rf, g=rg, h=rh, sel=address[0..2], out=out);
}